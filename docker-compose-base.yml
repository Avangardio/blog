version: '3.5'

services:
  nextjs:
   # env_file: ${ENV_FILE:-.env.example}
    build:
      context: ./nextjs
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network

  nestjs:
  #  env_file: ${ENV_FILE:-.env.example}
    build:
      context: ./nestjs
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    ports:
      - "4000:4000"
    networks:
      - app-network

  postgres:
    #env_file: ${ENV_FILE:-.env.example}
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: dbname
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./pginit/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pginit/tables/users.sql:/docker-entrypoint-initdb.d/users.sql

  redis:
   # env_file: ${ENV_FILE:-.env.example}
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redisdata:/data


volumes:
  pgdata:
  redisdata:
networks:
  app-network:
    driver: bridge
    name: my_shared_network
