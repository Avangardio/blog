version: '3.5'

services:
  api:
    build:
      context: ./nestjs/entrance
      dockerfile: Dockerfile
    ports:
      - "4000:3000"
    depends_on:
      - rabbitmq
      - postgres
      - redis
    networks:
      - app-network
    environment:
      PORT: 3000
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: dbname
      RMQ_HOST: rabbitmq

  frontend:
    build:
      context: ./blog-f
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    #depends_on:
    #  - api
    networks:
      - app-network
    environment:
      PORT: 3000
      NEXT_PUBLIC_AUTH_URL: http://api:3000/auth/
      NEXT_PUBLIC_POST_URL: http://api:3000/posts/
      NEXT_PUBLIC_MEDIA_URL: http://api:3000/media/

  auth_microservice:
    #  env_file: ${ENV_FILE:-.env.example}
    build:
      context: ./nestjs/authMicroservice
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - postgres
      - redis
    networks:
      - app-network
    environment:
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: dbname
      RMQ_HOST: rabbitmq

  posts_microservice:
    #  env_file: ${ENV_FILE:-.env.example}
    build:
      context: ./nestjs/postsMicroservice
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - postgres
      - redis
    networks:
      - app-network
    environment:
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: dbname
      RMQ_HOST: rabbitmq

  media_microservice:
    #  env_file: ${ENV_FILE:-.env.example}
    build:
      context: ./nestjs/mediaMicroservice
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - postgres
      - redis
    networks:
      - app-network
    environment:
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: dbname
      RMQ_HOST: rabbitmq

  mail_microservice:
    #  env_file: ${ENV_FILE:-.env.example}
    build:
      context: ./nestjs/mailMicroservice
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - postgres
      - redis
    networks:
      - app-network
    environment:
      REDIS_PORT: 6379
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: dbname
      RMQ_HOST: rabbitmq


  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "15672:15672" # Web интерфейс
      - "5672:5672"   # AMQP порт
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  postgres:
    #env_file: ${ENV_FILE:-.env.example}
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: dbname
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./pginit/init.sql:/docker-entrypoint-initdb.d/01_init.sql
      - ./pginit/tables/users.sql:/docker-entrypoint-initdb.d/02_users.sql
      - ./pginit/tables/posts.sql:/docker-entrypoint-initdb.d/03_posts.sql
      - ./pginit/tables/post_comments_1.sql:/docker-entrypoint-initdb.d/04_post_comments.sql
      - ./pginit/tables/post_likes.sql:/docker-entrypoint-initdb.d/05_post_likes.sql



  redis:
    # env_file: ${ENV_FILE:-.env.example}
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redisdata:/data


volumes:
  pgdata:
  redisdata:
networks:
  app-network:
    driver: bridge
    name: my_shared_network
